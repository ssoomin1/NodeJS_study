<<nodejs
: 서버사이드 스크립트이고, 이벤트루프기반의 싱글스레드로 작동한다.

-자바스크립트는 함수이다.
함수===값이다..
 함수==객체이다.
변수=함수;

-콜백함수: 비동기방식에서 사용되는 함수, (non-blocking I/o)

-애로우 함수: ()=>{}
- 객체 만드는 방법 :4가지 방법 
- forEach() 배열함수  / for-in   / for-of
- var: 함수 스코프   ==> let, const : 블럭스코프	
-------------------------------------------------------------------------
<<모듈
1. 기본모듈: node에서 제공되는 모듈
2. 내가 만든 모듈
3. 다른 사람들이 만든 모듈( npmjs.com / 설치필요: npm install 모듈이름....)

* 모듈: 코드를 파일로 분리시켜서 필요할 때 가져와서 사용하는 프로그램 단위 
                 (require)

내가 모듈을 만들었어..

다른 사람들이 사용하게 하고 싶어 <--- 모듈을 내보내는 코드를 작성
exports  / module exports: 객체만 내보낼 수 있음
---------------------------------------------------------------------


객체생성: myModule
   name:kim, age:35
   about(): 나의 이름은 kim이고 나이는 35입니다  를 출력하는 함수

다른 파일에서  myModule가지고 와서
이름하고 나이 출력해봐

module.exports={   }
-------------------------------------------------------------
<<파일읽고 쓰기
1. 파일 모듈  :fs 설치
2. 파일 읽기  readFile 비동기
fs.readFile('data.txt',(err,result)=>{
if(err) {
console.log(err);}
else {
console.log(result);
}


})
:  path에 있는 파일을 다 읽은 후 callback함수를 실행해라
3. 파일쓰기 writeFile
-------------------------------------------------------------
<<웹서버 만들기
* 노드는 서버스크립트 언어이므로 서버에서 돌아간다
* 노드에는 기본적으로 http모듈이 내장되어 있음
* http모듈을 이용하면 3줄정도로 웹서버 만들수 있음

express: http웹서버+편리한 추가기능포함
1. 사용자 요청이 들어왔을 때 처리하는 방법

*btn.addEventListener('click',function(){})

 객체.on('exit',function(){
console.log('exit');

}

* 사용자 접속: connection 이벤트
* 사용자요청: request 이벤트
* 사용자 종료: close 이벤트

200,  404,  500, 300
-----------------------------------------------------------------
*정적파일: html, css, img : public폴더
* 노드의 템플릿엔진: pug  /ejs
  스프링의 템플릿엔진: jsp

--------------------------------------------------------------------
<<express : http모듈+ 편리한 기능들을 추 가해서 만든거야
1. 노드의 웹 프레임워크
2. express에서 제공하는 가장 유명한, 강력한 함수: 미들웨어(middleware), 라우터(router)

* 다른 모듈을 설치할 때 (cannot  find module 나올때 )
1) 설치방법: npm i express  --save

http://localhost:3000/doc/1.html  <==1.html을 보여줘야 하고
http://localhost:3000/login/ <==login인화면을 보여줘야 하고
http://localhost:3000/contact/ <==contact 화면을 보여줘야 함
----------------------------------------------------------------------------------------
<<미들웨어(middleware)
* 함수이다.
* 중간에 가로채서 미리 처리하는 것
*미들웨어 등록: use()사용

app.use() :  미들웨어 등록시 사용
//라우터
app.get("/login", cb ) :사용자가 get방식으로  login에 접속했을 때
app.post("/login" , cb ): 사용자가 post방식으로 login에 접속했을 때 
app.put("/test", cb ): 사용자가 put방식(update)으로 test에 접속했을 때
app.delete("/test",, cb ):사용자가 delete방식으로 test에 접속했을 때  

내가 지금 이 자리에서 15개의 모듈을 설치했어..
내일, 3-1반 교실에서 이 프로그램 실행할꺼야..
(15개모듈을 설치  --save           : 

1. package.json   만드는 방법: npm init  
 --save  
http://localhost:3000  : /로 접속
http://localhost:3000  : public
http://localhost:3000/img/lion1.png

http://localhost:3000/statci/img/lion1.jpg
-----------------------------------------------------------------------
<<템플릿 엔진
: res.write("<html><head><title><body>");
* view(html)를 따로 파일로 만드는 프로그램
* pug  /ejs

<!doctype html>
<html>
	<head>
		<title>
	<body>
		<ul>
			<li>
		<h1>
---------------------------------------------------------------------------
<<node에서 사용자가 입력한 값을 가져오는 방법
*php  $_GET[],  $_POST[]
*jsp : request.getParameter()


1. get방식  http://localhost:3000/login?name=kim&age=30
req.query.이름


2.post방식
req.body.이름



3. param방식 http://localhost:3000/:kim  (한개만 보고 있을 때)








  











